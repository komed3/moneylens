let data={},debounceTimeout=null;function formatNumber(t,e=0,a=0){return Number(t).toLocaleString("en-US",{minimumFractionDigits:a,maximumFractionDigits:e})}function animateValue(t,e,a=0,n=600){const o=document.querySelector(`[data-item="${t}"]`);if(o){const t=parseFloat(o.dataset.value)||0,u=performance.now(),c=e-t;requestAnimationFrame((function i(r){const m=r-u,l=Math.min(m/n,1),d=t+c*l;o.textContent=formatNumber(d,a,a),o.dataset.value=d,l<1?requestAnimationFrame(i):(o.dataset.value=e,o.textContent=formatNumber(e,a,a))}))}}function insertDataValues(t){document.querySelectorAll("[data-info]").forEach((e=>{const a=e.getAttribute("data-info");a in t&&(e.textContent=formatNumber(t[a],2,0))}))}function handleInput(t){const e=t.target;let a=e.value.replace(/[^\d]/g,"");a=a.replace(/^0+/,""),a||(a=0);const n=formatNumber(a);e.value=n,calculate_metrics(a)}function calculate_metrics(t){clearTimeout(debounceTimeout),debounceTimeout=setTimeout((()=>{calc_metric__gold(t)}),300)}function calc_metric__gold(t){const e=t/data.gold_price,a=e/19.32,n=2*Math.cbrt(3*a/(4*Math.PI));animateValue("__gold_weight",e,3),animateValue("__gold_diameter",n,3)}document.addEventListener("DOMContentLoaded",(()=>{fetch("./data.json").then((t=>t.json())).then((t=>{data=t,insertDataValues(data)})).catch((t=>{}));const t=document.getElementById("input");t&&t.addEventListener("input",handleInput)}));